name: Build and Deploy Docker Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for semantic-release to create tags
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for conventional commits analysis

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 21
          extra_plugins: |
            @semantic-release/git
            @semantic-release/changelog
            @semantic-release/npm
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create VERSION file (fallback)
        if: steps.semantic-release.outputs.new_release_version == ''
        run: |
          echo "No new version released, checking if VERSION file exists"
          if [ ! -f VERSION ]; then
            echo "VERSION file does not exist, creating with default version"
            echo "0.0.0-dev" > VERSION
          else
            echo "VERSION file already exists, keeping current version"
          fi

      - name: Display VERSION file content
        run: |
          echo "VERSION file content:"
          cat VERSION

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Apache+PHP image
        id: meta-apache
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/reliquary
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
            ${{ steps.semantic-release.outputs.new_release_version != '' && format('type=raw,value={0}', steps.semantic-release.outputs.new_release_version) || '' }}

      - name: Build and push Apache+PHP image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/app/Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-apache.outputs.tags }}
          labels: ${{ steps.meta-apache.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_VERSION=${{ steps.semantic-release.outputs.new_release_version || '0.0.0-dev' }}

      - name: Trigger Watchtower update
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          curl -H "Authorization: Bearer ${{ secrets.WATCHTOWER_HTTP_API_TOKEN }}" \
               -X POST ${{ secrets.PRODUCTION_URL }}:8080/v1/update
